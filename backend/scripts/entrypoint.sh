#!/bin/bash

# Charger les variables d‚Äôenvironnement depuis le fichier .env
export $(grep -v '^#' .env | xargs)

# Par s√©curit√© (si certaines variables manquent)
DB_NAME=${DB_NAME:-pos_management}
DB_USER=${DB_USER:-postgres}
DB_PASSWORD=${DB_PASSWORD:-Jarina&586}
DB_HOST=${DB_HOST:-localhost}
DB_PORT=${DB_PORT:-5432}

# Attendre que Postgres soit pr√™t
until pg_isready -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER"; do
  echo "‚è≥ En attente de la base de donn√©es PostgreSQL..."
  sleep 2
done

# Cr√©er la base si elle n'existe pas d√©j√†
echo "üöÄ V√©rification/cr√©ation de la base $DB_NAME..."
psql -h "$DB_HOST" -U "$DB_USER" -tc "SELECT 1 FROM pg_database WHERE datname = '$DB_NAME'" | grep -q 1 || \
  psql -h "$DB_HOST" -U "$DB_USER" -c "CREATE DATABASE $DB_NAME"

# Appliquer les migrations
echo "üîß Application des migrations Alembic..."
alembic upgrade head

# Create initial data in DB
python app/initial_data.py

# Lancer l'application
echo "üéâ D√©marrage de l'application..."
# D√©marrage de FastAPI avec uvicorn
echo "üöÄ D√©marrage de FastAPI..."
exec "$@"